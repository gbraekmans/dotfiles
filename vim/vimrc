set nocompatible                             " Not using vi

" Leader mappings
let maplocalleader = "\<tab>"                " Map the localleader to tab
let mapleader = "\<space>"                   " Map the leader to space

" Pathogen
execute pathogen#infect()

" Keep me informed of what I typed
set showcmd

" Colors
colorscheme badwolf                          " Use a nice color scheme
set cursorline                               " Highlight the current line
set colorcolumn=80                           " Highlight column 80

" Code display
set number                                   " Line numbers
set relativenumber                           " Relative numbers
set breakindent                              " Wrap lines with indentation
set nofoldenable                             " Start folds expanded

" Hard tabs
set tabstop=2                                " 2 visual spaces per tab
set shiftwidth=2                             " same for indent

" Multiple file handling
set confirm                                  " Ask for save instead of error

" Avoid the press enter to continue prompts
set shortmess=aoOtI
set cmdheight=2

" Set up splits
set splitbelow
set splitright

" A better status line
set statusline=%f\ %{fugitive#statusline()}\ %y%=
set statusline+=Line:\ %l/%L\ \(%p%%\)\ Column:\ %02c

" Show invisibles
set listchars=trail:·,tab:»·
set list

" Ignore case while searching
set ignorecase
set smartcase

" wildmenu ignores gitignore files
if filereadable('.gitignore')
    let igstring = ''
    for oline in readfile('.gitignore')
        let line = substitute(oline, '\s|\n|\r', '', "g")
        if line =~ '^#' | con | endif
        if line == '' | con  | endif
        if line =~ '^!' | con  | endif
        if line =~ '/$' | let igstring .= "," . line . "*" | con | endif
        let igstring .= "," . line
    endfor
    let execstring = "set wildignore=".substitute(igstring, '^,', '', "g")
    execute execstring
endif

" Use ag, the silver searcher, if it's installed on the system
if executable("ag")
	set grepprg=ag\ --nogroup\ --nocolor\ --ignore-case\ --column
	set grepformat=%f:%l:%c:%m,%f:%l:%m
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" Netrw
let g:netrw_list_hide=netrw_gitignore#Hide() " Hide gitignore entries
let g:netrw_list_hide.=',.git/$'             " Hide the .git directory

" Gui options
if (has('gui_running'))
	set guioptions=c
	set guifont=DejaVu\ Sans\ Mono\ 10
	if executable("wmctrl")
		noremap <silent> <F11> :call system("wmctrl -ir " . v:windowid . " -b toggle,fullscreen")<CR>
	endif
endif
" Custom mappings
" Paste from the yank register
nnoremap <leader>p "0p
nnoremap <leader>P "0P
" Find current word under cursor in project
nnoremap <leader>f :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>
" Close buffer/split
nnoremap <leader>d :bdel<CR> 
nnoremap <leader>D :q!<CR>
" Add a bunch of files
nnoremap <leader>a :argadd **/
" Save a buffer
nnoremap <leader>w :w<CR>
nnoremap <leader>W :wq<CR>
" Splits
nnoremap <leader>s :bprev<CR>:split<CR>:bnext<CR>
nnoremap <leader>v :bprev<CR>:vertical split<CR>:bnext<CR>
" Split movement toggle
nnoremap <leader><leader> <C-w>w
" Make this split the only window
nnoremap <leader>o :only<CR>
" Make bindings
nnoremap <leader>mm :make<CR>
nnoremap <leader>mc :make clean<CR>
nnoremap <leader>mt :make test<CR>
" Git bindings
nnoremap <leader>gc :Gcommit<CR>
nnoremap <leader>gd :Gdiff<CR>
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gl :Glog<CR>:cw<CR>
nnoremap <leader>ga :Git add .<CR><CR>
nnoremap <leader>gp :Gpush<CR>
" CtrlP mappings
let g:ctrlp_map='<leader>e'
" Prevent the command line window from popping up
nmap q: :q

" Insert mode escape by jj
inoremap jj <ESC>
